TODOS
================
Create virtualenv

Add stemming to tf-idf

Create SOM (b) just by connecting all with all and playing with settings in Gephi
Create test to measure recall of TF-IDF vs. related content / story bunches so I can assess how well TF-IDF is doing

Download DBpedia data on all Guardian tags so I can show this, and also filter tags by 'person', 'country' etc. when showing news visualisations split by tag

Create 'importance' metric for each page
(based on number of FB shares, number of FB shares compared to similar articles (TFIDF), number of very similar articles within short timerange (TFIDF) (and also compare this to normal frequency of articles on the subject), internal guardian pagerank, novelty relative to all previous (time-wise) articles)

Create static 'article clusters' which may make other analyses easier? So for each month split all news into clusters, assign each article to nearest cluster, and also store overall cohesiveness of each cluster. Can then pick out most shared/pageranked stories within each cluster, to use within importance metric


IDEAS
================
Character maps, who interacts with who when (could do Obama, Cameron, Merkel, etc??) http://csclub.uwaterloo.ca/~n2iskand/?page_id=13

Visualise tags over time, i.e. how many times a month they are used? So would see spikes in Iraq, Gaza, etc.
http://neuralengr.com/asifr/journals/

Or alternatively/additionally something like this for showing tags over the months:
http://dataaddict.fr/prenoms/#alain,amadou,anis,amine,alice,gerard,ghislain,habib,herve

Newsreader project
http://www.lrec-conf.org/proceedings/lrec2014/pdf/645_Paper.pdf

Create an API for use in web project. Commands:
Get related story (parameter = past/future, parameter = 1 day, 1 week, 1 month, 1 year, 10 years) --> finds most relevant/significant story in time range (may need to look for peaks in news, and pick best article or first article within the peak)
Split story history (parameter??=number of clusters to split into) --> splits the story into 2 (or N?) clusters of historical stories (and finds the big one within each of these using get related story(?))
Fill out story (story1, story2) --> given 2 stories, tries to fill out the branch with another story that fits well between them timewise
Optional parameter for the above would be a keyword/tag added by the user, to guide the search. I.e. if the user has a story about Israel/Palestine and wants to do a split story, he can define the paths of interest as: film, charities, and USA. This would then heavily influence the related story chains that are linked to this story...

Log of all crawled:
===================
2012-2014: All Guardian data and Facebook data (not Guardian link data, as not used within 2D grid or Butterfly effect)
